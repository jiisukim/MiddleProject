/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2021-07-21 10:21:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.client;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.MemVO;
import vo.CampHostVO;

public final class client_005fbooking_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	//파라미터로 받을것들 
	//해당 캠핑장정보(수용인원, 가격 ) 		
	MemVO memVO = (MemVO)session.getAttribute("memVO")==null?null:(MemVO)session.getAttribute("memVO");
	String memNick = "";
	String memName = "";
	if(memVO!=null) {
		memNick = memVO.getMemNick();
		memName = memVO.getMemName();
	}


      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">  \t\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.15.3/css/all.css\" integrity=\"sha384-SZXxX4whJ79/gErwcOYf+zWLeJdY/qpuqC4cAa9rOGUstPomtqpuNWT9wdPEn2fk\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>  \r\n");
      out.write("\t<script src=\"https://cdn.iamport.kr/js/iamport.payment-1.1.5.js\" type=\"text/javascript\"></script>  \r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t// 이전화면으로 돌아가기\r\n");
      out.write("\t\tfunction cancelForm(){\r\n");
      out.write("\t\t\tif(confirm(\"이전화면으로 돌아가시겠습니까?\")){\r\n");
      out.write("\t\t\t\tlocation.href = \"");
      out.print(request.getContextPath());
      out.write("/campingDetail.jsp\";\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar cmpFee = 25000;//1박 가격\r\n");
      out.write("\t\tvar bkDayin = 0;\r\n");
      out.write("\t\tvar bkDayout = 0;\r\n");
      out.write("\t\tvar bak = 0;\r\n");
      out.write("\t\tvar bkPrice = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).ready(function(){\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#bkDayin\").change(function () {   // 시작날짜가 오늘보다 전 날짜인 경우\r\n");
      out.write("\t\t\t\tvar date = new Date();\r\n");
      out.write("\t\t\t\tvar year = date.getFullYear(); \r\n");
      out.write("\t\t\t\tvar month = (1 + date.getMonth());          \r\n");
      out.write("\t\t\t\t\tmonth = month >= 10 ? month : '0' + month; \r\n");
      out.write("\t\t\t\tvar day = date.getDate();                 \r\n");
      out.write("\t\t\t\t\tday = day >= 10 ? day : '0' + day;\r\n");
      out.write("\t\t\t\tdate = year + month +day;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar startDate = $(\"#bkDayin\").val();\r\n");
      out.write("\t\t\t\tstartDate = startDate.replace(/-/gi, \"\");\r\n");
      out.write("\t\t\t\tconsole.log(startDate);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tconsole.log(date);\r\n");
      out.write("\t\t\t\tif(parseInt(date) > parseInt(startDate)){\r\n");
      out.write("\t\t\t\t\talert(\"입소일이 과거입니다. 올바르게 입력해주십시오\");\r\n");
      out.write("\t\t\t\t\t$(\"#bkDayin\").val('startDate');     // 야매식 날짜 선택 풀리게 하기\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tbkDayin = startDate;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t\t$(\"#bkDayout\").change(function () {      // 끝 날짜가 시작날짜보다 빠를 시 오류창 출력\r\n");
      out.write("\t\t\t\tvar startDate = $(\"#bkDayin\").val();\r\n");
      out.write("\t\t\t\tvar startDate2 = startDate.replace(/-/gi, \"\");\r\n");
      out.write("\t\t\t\tconsole.log(startDate);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar lastDate = $(\"#bkDayout\").val();\r\n");
      out.write("\t\t\t\tlastDate = lastDate.replace(/-/gi, \"\");\r\n");
      out.write("\t\t\t\tconsole.log(lastDate);\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(parseInt(startDate2) > parseInt(lastDate)){\r\n");
      out.write("\t\t\t\t\talert(\"마지막 날이 시작 날보다 빠릅니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#bkDayout\").val('startDate');      // 야매식 날짜 선택 풀리게 하기\r\n");
      out.write("\t\t\t\t}else if(parseInt(startDate2) == parseInt(lastDate)){\r\n");
      out.write("\t\t\t\t\tbak = 1;\r\n");
      out.write("\t\t\t\t\tconsole.log(bak);\r\n");
      out.write("\t\t\t\t\tbkPrice = bak * cmpFee;\r\n");
      out.write("\t\t\t\t\tvar result = bkPrice + \"원\";\r\n");
      out.write("\t\t\t\t\t$(\"#showprice\").html(result);\r\n");
      out.write("\t\t\t\t\t$(\"#bkPrice\").val(bkPrice);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\telse{\r\n");
      out.write("\t\t\t\t\tbkDayout = lastDate;\r\n");
      out.write("\t\t\t\t\tbak = bkDayout - bkDayin;\r\n");
      out.write("\t\t\t\t\tconsole.log(bak);\r\n");
      out.write("\t\t\t\t\tbkPrice = bak * cmpFee\r\n");
      out.write("\t\t\t\t\tvar result = bkPrice + \"원\";\r\n");
      out.write("\t\t\t\t\t$(\"#showprice\").html(result);\r\n");
      out.write("\t\t\t\t\t$(\"#bkPrice\").val(bkPrice);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#paying\").click(function () {\r\n");
      out.write("\t\t\t\tvar IMP = window.IMP; // 생략가능\r\n");
      out.write("\t\t\t\tIMP.init('imp19732306');\r\n");
      out.write("\t\t\t\t// 'iamport' 대신 부여받은 \"가맹점 식별코드\"를 사용\r\n");
      out.write("\t\t\t\t// i'mport 관리자 페이지 -> 내정보 -> 가맹점식별코드\r\n");
      out.write("\t\t\t\tIMP.request_pay({\r\n");
      out.write("\t\t\t\t\tpg: 'inisis', // version 1.1.0부터 지원.\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t'kakao':카카오페이,\r\n");
      out.write("\t\t\t\t\thtml5_inicis':이니시스(웹표준결제)\r\n");
      out.write("\t\t\t\t\t'nice':나이스페이\r\n");
      out.write("\t\t\t\t\t'jtnet':제이티넷\r\n");
      out.write("\t\t\t\t\t'uplus':LG유플러스\r\n");
      out.write("\t\t\t\t\t'danal':다날\r\n");
      out.write("\t\t\t\t\t'payco':페이코\r\n");
      out.write("\t\t\t\t\t'syrup':시럽페이\r\n");
      out.write("\t\t\t\t\t'paypal':페이팔\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tpay_method: 'card',\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t'samsung':삼성페이,\r\n");
      out.write("\t\t\t\t\t'card':신용카드,\r\n");
      out.write("\t\t\t\t\t'trans':실시간계좌이체,\r\n");
      out.write("\t\t\t\t\t'vbank':가상계좌,\r\n");
      out.write("\t\t\t\t\t'phone':휴대폰소액결제\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tmerchant_uid: 'merchant_' + new Date().getTime(),\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\tmerchant_uid에 경우\r\n");
      out.write("\t\t\t\t\thttps://docs.iamport.kr/implementation/payment\r\n");
      out.write("\t\t\t\t\t위에 url에 따라가시면 넣을 수 있는 방법이 있습니다.\r\n");
      out.write("\t\t\t\t\t참고하세요.\r\n");
      out.write("\t\t\t\t\t나중에 포스팅 해볼게요.\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tname: '백일야영장',\r\n");
      out.write("\t\t\t\t\t//결제창에서 보여질 이름\r\n");
      out.write("\t\t\t\t\tamount: bkPrice,\r\n");
      out.write("\t\t\t\t\t//가격\r\n");
      out.write("\t\t\t\t\tbuyer_email: 'iamport@siot.do',\r\n");
      out.write("\t\t\t\t\tbuyer_name: '구매자이름',\r\n");
      out.write("\t\t\t\t\tbuyer_tel: '010-1234-5678',\r\n");
      out.write("\t\t\t\t\tbuyer_addr: '서울특별시 강남구 삼성동',\r\n");
      out.write("\t\t\t\t\tbuyer_postcode: '123-456',\r\n");
      out.write("\t\t\t\t\tm_redirect_url: '");
      out.print(request.getContextPath());
      out.write("/'\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\t모바일 결제시,\r\n");
      out.write("\t\t\t\t\t결제가 끝나고 랜딩되는 URL을 지정\r\n");
      out.write("\t\t\t\t\t(카카오페이, 페이코, 다날의 경우는 필요없음. PC와 마찬가지로 callback함수로 결과가 떨어짐)\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\t}, function (rsp) {\r\n");
      out.write("\t\t\t\t\t\tconsole.log(rsp);\r\n");
      out.write("\t\t\t\t\t\tif (rsp.success) {\r\n");
      out.write("\t\t\t\t\t\t\tvar msg = '결제가 완료되었습니다.';\r\n");
      out.write("\t\t\t\t\t\t\tmsg += '고유ID : ' + rsp.imp_uid;\r\n");
      out.write("\t\t\t\t\t\t\tmsg += '상점 거래ID : ' + rsp.merchant_uid;\r\n");
      out.write("\t\t\t\t\t\t\tmsg += '결제 금액 : ' + rsp.paid_amount;\r\n");
      out.write("\t\t\t\t\t\t\tmsg += '카드 승인번호 : ' + rsp.apply_num;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tvar fm = $(\"#fm\");\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\tfm.attr(\"method\", \"post\");\r\n");
      out.write("\t\t\t\t\t\t\tfm.attr(\"action\", \"");
      out.print(request.getContextPath());
      out.write("/pay/chspay.do\");\r\n");
      out.write("\t\t\t\t\t\t\tfm.submit();\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tvar msg = '결제에 실패하였습니다.';\r\n");
      out.write("\t\t\t\t\t\t\tmsg += '에러내용 : ' + rsp.error_msg;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\talert(msg);\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<style>\r\n");
      out.write("\t\t#box{\r\n");
      out.write("\t\t\tborder: 5px solid gray;\r\n");
      out.write("\t\t\tpadding :20px 0px;\r\n");
      out.write("\t\t\tmargin : 0px 30px;\r\n");
      out.write("\t\t}\t\r\n");
      out.write("\t\t#flow{\r\n");
      out.write("\t\t\tmargin : 0px 10px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</style>\r\n");
      out.write("<title>이짝워뗘 | 예약 페이지</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form class=\"form-horizontal container\" id=\"fm\">\r\n");
      out.write("        <h2 class=\"col-sm-offset-2\">예약하기</h2>\r\n");
      out.write("        <div id=\"box\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cmpCode\" id=\"cmpCode\" value=\"999\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"bkMemnum\" class=\"control-label col-sm-2\">예약 인원<sup class=\"text-danger\">*</sup> : </label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10 form-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control width\" id=\"bkMemnum\" name=\"bkMemnum\"><span class=\"text-info\" style=\"font-size: 1.3em; margin-left: 10px;\">명</span>\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\r\n");
      out.write("\t\t\t<hr>            \r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"bkDayin\" class=\"control-label col-sm-2\">입소일 ~ 퇴소일 : </label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10 form-inline\">\r\n");
      out.write("\t\t\t\t\t<input type=\"date\" id=\"bkDayin\" class=\"form-control\" name=\"bkDayin\"><span class=\"text-primary\" id=\"flow\">~</span>\t\r\n");
      out.write("\t\t\t\t\t<input type=\"date\" id=\"bkDayout\" class=\"form-control\" name=\"bkDayout\">\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\t\r\n");
      out.write("\t\t\t<hr>\t\t\t        \r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label for=\"bkPrice\" class=\"control-label col-sm-2\">총 결제액: </label>\r\n");
      out.write("\t\t\t\t<div class=\"col-sm-10 form-inline\">\r\n");
      out.write("\t\t\t\t\t<h2 class=\"text-info\" id=\"showprice\"></h2>\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" id=\"bkPrice\" class=\"form-control\" name=\"bkPrice\" readonly>\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\t\t\r\n");
      out.write("        </div>\r\n");
      out.write("\t\t<div class=\"form-group btns\">\r\n");
      out.write("\t\t\t<div class=\"col-sm-offset-2 col-sm-10\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-lg\" id=\"paying\">결제하기</button>\t\t\t\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-secondary btn-lg\" id=\"cancel\" onclick=\"cancelForm()\">돌아가기</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\t\t\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"memNick\" id=\"memNick\" value=\"");
      out.print(memVO.getMemNick() );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"memName\" id=\"memName\" value=\"");
      out.print(memVO.getMemName() );
      out.write("\">\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"flag\" id=\"flag\" value=\"\">\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
