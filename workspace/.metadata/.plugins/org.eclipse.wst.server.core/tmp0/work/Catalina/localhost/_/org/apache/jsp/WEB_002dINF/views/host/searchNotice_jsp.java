/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2021-06-24 05:57:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.host;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.PagingVO;
import vo.NoticeVO;
import java.util.List;

public final class searchNotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

	List<NoticeVO> noticeList = (List<NoticeVO>)request.getAttribute("noticeList");
// 	String msg = request.getParameter("msg") == "" ? "실패" : "성공";
// 	System.out.println(msg);
// 	PagingVO pagingVO = (PagingVO)request.getAttribute("pagingVO");
	


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\ttable{\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t}\r\n");
      out.write("\ttr:nth-child(1){\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\ttd:nth-child(1) {\r\n");
      out.write("\t\twidth: 70%;\t\r\n");
      out.write("\t}\r\n");
      out.write("\ttd:nth-child(2) {\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\twidth: 30%;\t\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<title>이짝워뗘 공지사항</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t  <h2>공지사항</h2>\r\n");
      out.write("\t  <br><br>\r\n");
      out.write("\t  <div>\r\n");
      out.write("\t  \t<form style=\"float: right;\" method=\"post\" enctype=\"multipart/form-data\" action=\"");
      out.print(request.getContextPath() );
      out.write("/host/noticeSearch.do\">\r\n");
      out.write("\t\t  <button disabled=\"disabled\">제목</button>\r\n");
      out.write("\t\t  <input type=\"text\" name=\"ntcTitle\">\r\n");
      out.write("\t\t  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"submit\" value=\"제목검색\">검색</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t  <br>\r\n");
      out.write("\t  <br>\r\n");
      out.write("\t  <table border=\"1\">\r\n");
      out.write("\t \t \t<tr>\r\n");
      out.write("\t\t      <td>제목</td>\r\n");
      out.write("\t\t      <td>날짜</td>\r\n");
      out.write("\t\t    </tr>\r\n");
      out.write("\t  ");

	  int notSize = noticeList.size();
	  	if(notSize > 0){		// 사이즈가 0보다 클때 : 공지사항 게시물이 있을 때
	  		for(int i =0; i<notSize; i++){
	  			String date = noticeList.get(i).getNtcDate();
	  			date = date.substring(0,10);
	  
      out.write("\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t      <td><a href=\"select.do?ntcCode=");
      out.print(noticeList.get(i).getNtcCode() );
      out.write('"');
      out.write('>');
      out.print( noticeList.get(i).getNtcTitle() );
      out.write("</a></td>\r\n");
      out.write("\t\t      <td>");
      out.print( date );
      out.write("</td>\r\n");
      out.write("\t\t  </tr>  \r\n");
      out.write("\t  ");
	
	  		} //fo문
	  
      out.write(" \r\n");
      out.write("\t  ");

	  	}else{				// 사이즈가 0일때 : 공지사항 게시물이 없을 때
	  
      out.write("\r\n");
      out.write("\t  \t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\">공지사항이 없습니다.</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t  ");

		}
	  
      out.write("\r\n");
      out.write("\t  </table>\r\n");
      out.write("\t<a href=\"noticeInsert.do\" style=\"float: right;\"><button>공지등록</button></a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t  \r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
